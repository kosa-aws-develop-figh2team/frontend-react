{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/components/PolicyCompare.js\";\nimport React from \"react\";\nimport \"../styles/PolicyCompare.css\";\n\n// 비교할 항목을 FIELDS에 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIELDS = [{\n  key: \"sprtTrgtCn\",\n  label: \"지원대상\"\n}, {\n  key: \"wlfareInfoReldCn\",\n  label: \"문의처 연락처\"\n}, {\n  key: \"wlfareInfoReldNm\",\n  label: \"문의처 이름\"\n}, {\n  key: \"aplyMtdCn\",\n  label: \"신청방법\"\n}, {\n  key: \"alwServCn\",\n  label: \"지원내용\"\n}, {\n  key: \"basfrmList\",\n  label: \"관련 자료 링크\"\n}];\n\n// 각 정책에서 비교 항목 값을 추출하는 함수\nfunction getFieldValue(policy, key) {\n  var _wantedDtl$inqplCtadr, _wantedDtl$inqplCtadr2, _wantedDtl$basfrmList2;\n  if (!policy || !policy.json || !policy.json.wantedDtl) return \"-\";\n  const wantedDtl = policy.json.wantedDtl;\n  switch (key) {\n    case \"sprtTrgtCn\":\n      return wantedDtl.sprtTrgtCn || \"-\";\n    case \"wlfareInfoReldCn\":\n      return ((_wantedDtl$inqplCtadr = wantedDtl.inqplCtadrList) === null || _wantedDtl$inqplCtadr === void 0 ? void 0 : _wantedDtl$inqplCtadr.wlfareInfoReldCn) || \"-\";\n    case \"wlfareInfoReldNm\":\n      return ((_wantedDtl$inqplCtadr2 = wantedDtl.inqplCtadrList) === null || _wantedDtl$inqplCtadr2 === void 0 ? void 0 : _wantedDtl$inqplCtadr2.wlfareInfoReldNm) || \"-\";\n    case \"aplyMtdCn\":\n      return wantedDtl.aplyMtdCn || \"-\";\n    case \"alwServCn\":\n      return wantedDtl.alwServCn || \"-\";\n    case \"basfrmList\":\n      // basfrmList가 배열 또는 객체일 수 있음\n      if (Array.isArray(wantedDtl.basfrmList)) {\n        var _wantedDtl$basfrmList;\n        // 여러 개면 첫 번째만 표시, 필요시 map으로 여러 개 표시 가능\n        return (_wantedDtl$basfrmList = wantedDtl.basfrmList[0]) !== null && _wantedDtl$basfrmList !== void 0 && _wantedDtl$basfrmList.wlfareInfoReldCn ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wantedDtl.basfrmList[0].wlfareInfoReldCn,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: wantedDtl.basfrmList[0].wlfareInfoReldNm || \"관련 자료\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : \"-\";\n      } else if ((_wantedDtl$basfrmList2 = wantedDtl.basfrmList) !== null && _wantedDtl$basfrmList2 !== void 0 && _wantedDtl$basfrmList2.wlfareInfoReldCn) {\n        // 객체일 경우\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wantedDtl.basfrmList.wlfareInfoReldCn,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: wantedDtl.basfrmList.wlfareInfoReldNm || \"관련 자료\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n      }\n      return \"-\";\n    default:\n      return \"-\";\n  }\n}\nfunction PolicyCompare({\n  policies\n}) {\n  var _left$json, _left$json$wantedDtl, _right$json, _right$json$wantedDtl;\n  const [left, right] = policies;\n\n  // 두 정책 비교 표시\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-compare-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC815\\uCC45 \\uBE44\\uAD50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"compare-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: ((_left$json = left.json) === null || _left$json === void 0 ? void 0 : (_left$json$wantedDtl = _left$json.wantedDtl) === null || _left$json$wantedDtl === void 0 ? void 0 : _left$json$wantedDtl.servNm) || \"정책 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD56D\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: ((_right$json = right.json) === null || _right$json === void 0 ? void 0 : (_right$json$wantedDtl = _right$json.wantedDtl) === null || _right$json$wantedDtl === void 0 ? void 0 : _right$json$wantedDtl.servNm) || \"정책 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: FIELDS.map(field => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getFieldValue(left, field.key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"field-label\",\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getFieldValue(right, field.key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, field.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = PolicyCompare;\nexport default PolicyCompare;\nvar _c;\n$RefreshReg$(_c, \"PolicyCompare\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FIELDS","key","label","getFieldValue","policy","_wantedDtl$inqplCtadr","_wantedDtl$inqplCtadr2","_wantedDtl$basfrmList2","json","wantedDtl","sprtTrgtCn","inqplCtadrList","wlfareInfoReldCn","wlfareInfoReldNm","aplyMtdCn","alwServCn","Array","isArray","basfrmList","_wantedDtl$basfrmList","href","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","PolicyCompare","policies","_left$json","_left$json$wantedDtl","_right$json","_right$json$wantedDtl","left","right","className","servNm","map","field","_c","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/components/PolicyCompare.js"],"sourcesContent":["import React from \"react\";\nimport \"../styles/PolicyCompare.css\";\n\n// 비교할 항목을 FIELDS에 정의\nconst FIELDS = [\n  { key: \"sprtTrgtCn\", label: \"지원대상\" },\n  { key: \"wlfareInfoReldCn\", label: \"문의처 연락처\" },\n  { key: \"wlfareInfoReldNm\", label: \"문의처 이름\" },\n  { key: \"aplyMtdCn\", label: \"신청방법\" },\n  { key: \"alwServCn\", label: \"지원내용\" },\n  { key: \"basfrmList\", label: \"관련 자료 링크\" }\n];\n\n// 각 정책에서 비교 항목 값을 추출하는 함수\nfunction getFieldValue(policy, key) {\n  if (!policy || !policy.json || !policy.json.wantedDtl) return \"-\";\n  const wantedDtl = policy.json.wantedDtl;\n  switch (key) {\n    case \"sprtTrgtCn\":\n      return wantedDtl.sprtTrgtCn || \"-\";\n    case \"wlfareInfoReldCn\":\n      return wantedDtl.inqplCtadrList?.wlfareInfoReldCn || \"-\";\n    case \"wlfareInfoReldNm\":\n      return wantedDtl.inqplCtadrList?.wlfareInfoReldNm || \"-\";\n    case \"aplyMtdCn\":\n      return wantedDtl.aplyMtdCn || \"-\";\n    case \"alwServCn\":\n      return wantedDtl.alwServCn || \"-\";\n    case \"basfrmList\":\n      // basfrmList가 배열 또는 객체일 수 있음\n      if (Array.isArray(wantedDtl.basfrmList)) {\n        // 여러 개면 첫 번째만 표시, 필요시 map으로 여러 개 표시 가능\n        return wantedDtl.basfrmList[0]?.wlfareInfoReldCn\n          ? <a href={wantedDtl.basfrmList[0].wlfareInfoReldCn} target=\"_blank\" rel=\"noopener noreferrer\">{wantedDtl.basfrmList[0].wlfareInfoReldNm || \"관련 자료\"}</a>\n          : \"-\";\n      } else if (wantedDtl.basfrmList?.wlfareInfoReldCn) {\n        // 객체일 경우\n        return <a href={wantedDtl.basfrmList.wlfareInfoReldCn} target=\"_blank\" rel=\"noopener noreferrer\">{wantedDtl.basfrmList.wlfareInfoReldNm || \"관련 자료\"}</a>;\n      }\n      return \"-\";\n    default:\n      return \"-\";\n  }\n}\n\nfunction PolicyCompare({ policies }) {\n  const [left, right] = policies;\n\n  // 두 정책 비교 표시\n  return (\n    <div className=\"policy-compare-container\">\n      <h2>정책 비교</h2>\n\n      <table className=\"compare-table\">\n        <thead>\n          <tr>\n            <th>{left.json?.wantedDtl?.servNm || \"정책 1\"}</th>\n            <th>항목</th>\n            <th>{right.json?.wantedDtl?.servNm || \"정책 2\"}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {FIELDS.map((field) => (\n            <tr key={field.key}>\n              <td>{getFieldValue(left, field.key)}</td>\n              <td className=\"field-label\">{field.label}</td>\n              <td>{getFieldValue(right, field.key)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default PolicyCompare;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,GAAG,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAO,CAAC,EACpC;EAAED,GAAG,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAU,CAAC,EAC7C;EAAED,GAAG,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAS,CAAC,EAC5C;EAAED,GAAG,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAO,CAAC,EACnC;EAAED,GAAG,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAO,CAAC,EACnC;EAAED,GAAG,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAW,CAAC,CACzC;;AAED;AACA,SAASC,aAAaA,CAACC,MAAM,EAAEH,GAAG,EAAE;EAAA,IAAAI,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAClC,IAAI,CAACH,MAAM,IAAI,CAACA,MAAM,CAACI,IAAI,IAAI,CAACJ,MAAM,CAACI,IAAI,CAACC,SAAS,EAAE,OAAO,GAAG;EACjE,MAAMA,SAAS,GAAGL,MAAM,CAACI,IAAI,CAACC,SAAS;EACvC,QAAQR,GAAG;IACT,KAAK,YAAY;MACf,OAAOQ,SAAS,CAACC,UAAU,IAAI,GAAG;IACpC,KAAK,kBAAkB;MACrB,OAAO,EAAAL,qBAAA,GAAAI,SAAS,CAACE,cAAc,cAAAN,qBAAA,uBAAxBA,qBAAA,CAA0BO,gBAAgB,KAAI,GAAG;IAC1D,KAAK,kBAAkB;MACrB,OAAO,EAAAN,sBAAA,GAAAG,SAAS,CAACE,cAAc,cAAAL,sBAAA,uBAAxBA,sBAAA,CAA0BO,gBAAgB,KAAI,GAAG;IAC1D,KAAK,WAAW;MACd,OAAOJ,SAAS,CAACK,SAAS,IAAI,GAAG;IACnC,KAAK,WAAW;MACd,OAAOL,SAAS,CAACM,SAAS,IAAI,GAAG;IACnC,KAAK,YAAY;MACf;MACA,IAAIC,KAAK,CAACC,OAAO,CAACR,SAAS,CAACS,UAAU,CAAC,EAAE;QAAA,IAAAC,qBAAA;QACvC;QACA,OAAO,CAAAA,qBAAA,GAAAV,SAAS,CAACS,UAAU,CAAC,CAAC,CAAC,cAAAC,qBAAA,eAAvBA,qBAAA,CAAyBP,gBAAgB,gBAC5Cb,OAAA;UAAGqB,IAAI,EAAEX,SAAS,CAACS,UAAU,CAAC,CAAC,CAAC,CAACN,gBAAiB;UAACS,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAC,QAAA,EAAEd,SAAS,CAACS,UAAU,CAAC,CAAC,CAAC,CAACL,gBAAgB,IAAI;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GACtJ,GAAG;MACT,CAAC,MAAM,KAAApB,sBAAA,GAAIE,SAAS,CAACS,UAAU,cAAAX,sBAAA,eAApBA,sBAAA,CAAsBK,gBAAgB,EAAE;QACjD;QACA,oBAAOb,OAAA;UAAGqB,IAAI,EAAEX,SAAS,CAACS,UAAU,CAACN,gBAAiB;UAACS,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAC,QAAA,EAAEd,SAAS,CAACS,UAAU,CAACL,gBAAgB,IAAI;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MACzJ;MACA,OAAO,GAAG;IACZ;MACE,OAAO,GAAG;EACd;AACF;AAEA,SAASC,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAA,IAAAC,UAAA,EAAAC,oBAAA,EAAAC,WAAA,EAAAC,qBAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC,GAAGN,QAAQ;;EAE9B;EACA,oBACE9B,OAAA;IAAKqC,SAAS,EAAC,0BAA0B;IAAAb,QAAA,gBACvCxB,OAAA;MAAAwB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEd5B,OAAA;MAAOqC,SAAS,EAAC,eAAe;MAAAb,QAAA,gBAC9BxB,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAK,EAAAO,UAAA,GAAAI,IAAI,CAAC1B,IAAI,cAAAsB,UAAA,wBAAAC,oBAAA,GAATD,UAAA,CAAWrB,SAAS,cAAAsB,oBAAA,uBAApBA,oBAAA,CAAsBM,MAAM,KAAI;UAAM;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjD5B,OAAA;YAAAwB,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACX5B,OAAA;YAAAwB,QAAA,EAAK,EAAAS,WAAA,GAAAG,KAAK,CAAC3B,IAAI,cAAAwB,WAAA,wBAAAC,qBAAA,GAAVD,WAAA,CAAYvB,SAAS,cAAAwB,qBAAA,uBAArBA,qBAAA,CAAuBI,MAAM,KAAI;UAAM;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR5B,OAAA;QAAAwB,QAAA,EACGvB,MAAM,CAACsC,GAAG,CAAEC,KAAK,iBAChBxC,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAKpB,aAAa,CAAC+B,IAAI,EAAEK,KAAK,CAACtC,GAAG;UAAC;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzC5B,OAAA;YAAIqC,SAAS,EAAC,aAAa;YAAAb,QAAA,EAAEgB,KAAK,CAACrC;UAAK;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9C5B,OAAA;YAAAwB,QAAA,EAAKpB,aAAa,CAACgC,KAAK,EAAEI,KAAK,CAACtC,GAAG;UAAC;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHnCY,KAAK,CAACtC,GAAG;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACa,EAAA,GA5BQZ,aAAa;AA8BtB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}