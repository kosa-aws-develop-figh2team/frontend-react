{"ast":null,"code":"import React,{useState,useEffect}from'react';//헤더\nimport Header from\"./components/Header\";// 챗봇\nimport ChatMessages from\"./components/ChatMessages\";import ChatForm from\"./components/ChatForm\";import\"./styles/chatbot.css\";// 정책 비교\nimport PolicySearch from\"./components/PolicySearch\";import PolicyCompare from\"./components/PolicyCompare\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([{role:\"model\",text:\"안녕하세요! 무엇을 도와드릴까요?\"}]);const handleSend=text=>{if(!text.trim())return;setMessages([...messages,{role:\"user\",text}]);// 실제 서비스에서는 여기서 API 호출 후 응답 추가\nsetTimeout(()=>{setMessages(prev=>[...prev,{role:\"model\",text:`\"${text}\"에 대한 답변입니다.`}]);},600);};const[policies,setPolicies]=useState([]);const[selected,setSelected]=useState([]);// 서버에서 정책 데이터 불러오기\nuseEffect(()=>{fetch(`${process.env.REACT_APP_SERVER_URL}/items`).then(res=>res.json()).then(data=>{// 서버에서 받아온 정책 데이터에 고유 id 추가\nconst policiesWithId=data.map(policy=>({...policy,id:policy.service_id// service_id를 id로 사용\n}));setPolicies(policiesWithId);}).catch(err=>{console.error('정책 데이터를 불러오는 중 오류 발생:',err);});},[]);const toggleSelect=id=>{setSelected(prevSelected=>prevSelected.includes(id)?prevSelected.filter(item=>item!==id):[...prevSelected,id]);};return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"#F6F2FF\",minHeight:\"100vh\"},children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"service-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-popup\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",children:/*#__PURE__*/_jsx(ChatMessages,{messages:messages})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-footer\",children:/*#__PURE__*/_jsx(ChatForm,{onSend:handleSend})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(PolicySearch,{policies:policies,selected:selected,toggleSelect:toggleSelect})}),/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(PolicyCompare,{policies:policies.filter(p=>selected.includes(p.id)),onClose:()=>setSelected([])})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","ChatMessages","ChatForm","PolicySearch","PolicyCompare","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","role","text","handleSend","trim","setTimeout","prev","policies","setPolicies","selected","setSelected","fetch","process","env","REACT_APP_SERVER_URL","then","res","json","data","policiesWithId","map","policy","id","service_id","catch","err","console","error","toggleSelect","prevSelected","includes","filter","item","style","background","minHeight","children","className","onSend","p","onClose"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n//헤더\nimport Header from \"./components/Header\";\n\n// 챗봇\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport \"./styles/chatbot.css\";\n\n// 정책 비교\nimport PolicySearch from \"./components/PolicySearch\";\nimport PolicyCompare from \"./components/PolicyCompare\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { role: \"model\", text: \"안녕하세요! 무엇을 도와드릴까요?\" }\n  ]);\n\n  const handleSend = (text) => {\n    if (!text.trim()) return;\n    setMessages([...messages, { role: \"user\", text }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      setMessages((prev) => [\n        ...prev,\n        { role: \"model\", text: `\"${text}\"에 대한 답변입니다.` }\n      ]);\n    }, 600);\n  };\n\n  const [policies, setPolicies] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  // 서버에서 정책 데이터 불러오기\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/items`)\n      .then(res => res.json())\n      .then(data => {\n        // 서버에서 받아온 정책 데이터에 고유 id 추가\n        const policiesWithId = data.map(policy => ({\n          ...policy,\n          id: policy.service_id // service_id를 id로 사용\n        }));\n        setPolicies(policiesWithId);\n      })\n      .catch(err => {\n        console.error('정책 데이터를 불러오는 중 오류 발생:', err);\n      });\n  }, []);\n\n  const toggleSelect = (id) => {\n    setSelected((prevSelected) =>\n      prevSelected.includes(id)\n        ? prevSelected.filter((item) => item !== id)\n        : [...prevSelected, id]\n    );\n  };\n\n  return (\n    <div style={{ background: \"#F6F2FF\", minHeight: \"100vh\" }}>\n      <Header/>\n\n      <div className=\"service-content\">\n        {/* 1. 챗봇 */}\n        <div className=\"section-container\">\n          <div className=\"chatbot-popup\">\n            <div className=\"chat-body\">\n              <ChatMessages messages={messages} />\n            </div>\n            <div className=\"chat-footer\">\n              <ChatForm onSend={handleSend} />\n            </div>\n          </div>\n        </div>\n\n        {/* 2. 정책 리스트 */}\n        <div className=\"section-container\">\n          <PolicySearch\n            policies={policies}\n            selected={selected}\n            toggleSelect={toggleSelect}\n          />\n        </div>\n\n        {/* 3. 정책 비교 */}\n        <div className=\"section-container\">\n          <PolicyCompare\n            policies={policies.filter((p) => selected.includes(p.id))}\n            onClose={() => setSelected([])}\n          />\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD;AACA,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAExC;AACA,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,sBAAsB,CAE7B;AACA,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,CACvC,CAAEc,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,oBAAqB,CAAC,CAC9C,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAID,IAAI,EAAK,CAC3B,GAAI,CAACA,IAAI,CAACE,IAAI,CAAC,CAAC,CAAE,OAClBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEE,IAAI,CAAE,MAAM,CAAEC,IAAK,CAAC,CAAC,CAAC,CAClD;AACAG,UAAU,CAAC,IAAM,CACfL,WAAW,CAAEM,IAAI,EAAK,CACpB,GAAGA,IAAI,CACP,CAAEL,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,IAAIA,IAAI,cAAe,CAAC,CAChD,CAAC,CACJ,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAED,KAAM,CAACK,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACsB,QAAQ,CAAEC,WAAW,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACAC,SAAS,CAAC,IAAM,CACduB,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,QAAQ,CAAC,CAC/CC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAI,CACZ;AACA,KAAM,CAAAC,cAAc,CAAGD,IAAI,CAACE,GAAG,CAACC,MAAM,GAAK,CACzC,GAAGA,MAAM,CACTC,EAAE,CAAED,MAAM,CAACE,UAAW;AACxB,CAAC,CAAC,CAAC,CACHf,WAAW,CAACW,cAAc,CAAC,CAC7B,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC7C,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,YAAY,CAAIN,EAAE,EAAK,CAC3BZ,WAAW,CAAEmB,YAAY,EACvBA,YAAY,CAACC,QAAQ,CAACR,EAAE,CAAC,CACrBO,YAAY,CAACE,MAAM,CAAEC,IAAI,EAAKA,IAAI,GAAKV,EAAE,CAAC,CAC1C,CAAC,GAAGO,YAAY,CAAEP,EAAE,CAC1B,CAAC,CACH,CAAC,CAED,mBACEzB,KAAA,QAAKoC,KAAK,CAAE,CAAEC,UAAU,CAAE,SAAS,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAC,QAAA,eACxDzC,IAAA,CAACN,MAAM,GAAC,CAAC,cAETQ,KAAA,QAAKwC,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAE9BzC,IAAA,QAAK0C,SAAS,CAAC,mBAAmB,CAAAD,QAAA,cAChCvC,KAAA,QAAKwC,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BzC,IAAA,QAAK0C,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxBzC,IAAA,CAACL,YAAY,EAACS,QAAQ,CAAEA,QAAS,CAAE,CAAC,CACjC,CAAC,cACNJ,IAAA,QAAK0C,SAAS,CAAC,aAAa,CAAAD,QAAA,cAC1BzC,IAAA,CAACJ,QAAQ,EAAC+C,MAAM,CAAEnC,UAAW,CAAE,CAAC,CAC7B,CAAC,EACH,CAAC,CACH,CAAC,cAGNR,IAAA,QAAK0C,SAAS,CAAC,mBAAmB,CAAAD,QAAA,cAChCzC,IAAA,CAACH,YAAY,EACXe,QAAQ,CAAEA,QAAS,CACnBE,QAAQ,CAAEA,QAAS,CACnBmB,YAAY,CAAEA,YAAa,CAC5B,CAAC,CACC,CAAC,cAGNjC,IAAA,QAAK0C,SAAS,CAAC,mBAAmB,CAAAD,QAAA,cAChCzC,IAAA,CAACF,aAAa,EACZc,QAAQ,CAAEA,QAAQ,CAACwB,MAAM,CAAEQ,CAAC,EAAK9B,QAAQ,CAACqB,QAAQ,CAACS,CAAC,CAACjB,EAAE,CAAC,CAAE,CAC1DkB,OAAO,CAAEA,CAAA,GAAM9B,WAAW,CAAC,EAAE,CAAE,CAChC,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,CAGV,CAEA,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}