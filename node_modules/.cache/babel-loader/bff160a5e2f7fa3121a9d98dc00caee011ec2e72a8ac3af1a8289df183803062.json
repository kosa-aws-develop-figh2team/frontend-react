{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [text, setText] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [displayedText, setDisplayedText] = useState('');\n//   const [displayedAuthor, setDisplayedAuthor] = useState('');\n\n//   useEffect(() => {\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`)\n//       .then(res => res.json())\n//       .then(data => {\n//         let text = data.text.split(\"by\")[0]\n//         let author = data.text.split(\"by\")[1]\n//         setDisplayedText(text);\n//         setDisplayedAuthor(author)\n//       });\n//   }, []);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ text, username }),\n//     });\n//     setText('');\n//     setUsername('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>확신없는 랜덤 명언</h1>\n//       <h2>{displayedText ? displayedText : \"아직 저장된 명언이 없거나 서버와 연결되지 않았습니다.\"}</h2>\n//       <h2>by {displayedAuthor}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter text\"\n//           value={text}\n//           onChange={e => setText(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter username\"\n//           value={username}\n//           onChange={e => setUsername(e.target.value)}\n//         />\n//         <button type=\"submit\">명언 저장</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport \"./styles/chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"model\",\n    text: \"안녕하세요! 무엇을 도와드릴까요?\"\n  }]);\n  const handleSend = text => {\n    if (!text.trim()) return;\n    setMessages([...messages, {\n      role: \"user\",\n      text\n    }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        role: \"model\",\n        text: `\"${text}\"에 대한 답변입니다.`\n      }]);\n    }, 600);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-popup\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(ChatMessages, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: /*#__PURE__*/_jsxDEV(ChatForm, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t8zHiXQsCakj3yz+5X3A7PyACpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatHeader","ChatMessages","ChatForm","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","text","handleSend","trim","setTimeout","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [text, setText] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [displayedText, setDisplayedText] = useState('');\n//   const [displayedAuthor, setDisplayedAuthor] = useState('');\n\n//   useEffect(() => {\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`)\n//       .then(res => res.json())\n//       .then(data => {\n//         let text = data.text.split(\"by\")[0]\n//         let author = data.text.split(\"by\")[1]\n//         setDisplayedText(text);\n//         setDisplayedAuthor(author)\n//       });\n//   }, []);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ text, username }),\n//     });\n//     setText('');\n//     setUsername('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>확신없는 랜덤 명언</h1>\n//       <h2>{displayedText ? displayedText : \"아직 저장된 명언이 없거나 서버와 연결되지 않았습니다.\"}</h2>\n//       <h2>by {displayedAuthor}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter text\"\n//           value={text}\n//           onChange={e => setText(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter username\"\n//           value={username}\n//           onChange={e => setUsername(e.target.value)}\n//         />\n//         <button type=\"submit\">명언 저장</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport \"./styles/chatbot.css\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { role: \"model\", text: \"안녕하세요! 무엇을 도와드릴까요?\" }\n  ]);\n\n  const handleSend = (text) => {\n    if (!text.trim()) return;\n    setMessages([...messages, { role: \"user\", text }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      setMessages((prev) => [\n        ...prev,\n        { role: \"model\", text: `\"${text}\"에 대한 답변입니다.` }\n      ]);\n    }, 600);\n  };\n\n  return (\n    <div className=\"chatbot-popup\">\n      <ChatHeader />\n      <div className=\"chat-body\">\n        <ChatMessages messages={messages} />\n      </div>\n      <div className=\"chat-footer\">\n        <ChatForm onSend={handleSend} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CACvC;IAAEU,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAqB,CAAC,CAC9C,CAAC;EAEF,MAAMC,UAAU,GAAID,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,CAACE,IAAI,CAAC,CAAC,EAAE;IAClBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,IAAI,EAAE,MAAM;MAAEC;IAAK,CAAC,CAAC,CAAC;IAClD;IACAG,UAAU,CAAC,MAAM;MACfL,WAAW,CAAEM,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAEL,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE,IAAIA,IAAI;MAAe,CAAC,CAChD,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BZ,OAAA,CAACJ,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdhB,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBZ,OAAA,CAACH,YAAY;QAACM,QAAQ,EAAEA;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNhB,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BZ,OAAA,CAACF,QAAQ;QAACmB,MAAM,EAAEV;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA5BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}