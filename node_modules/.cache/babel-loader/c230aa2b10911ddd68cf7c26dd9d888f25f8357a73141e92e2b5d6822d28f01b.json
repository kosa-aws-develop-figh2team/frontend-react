{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/components/PolicySearch.js\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, List, ListItem, Typography, Paper, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// 스타일링된 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PolicyListItem = styled(ListItem)(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5),\n  margin: theme.spacing(1, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover\n  }\n}));\n_c = PolicyListItem;\nconst PolicyInfoBox = styled(Box)(({\n  theme\n}) => ({\n  marginLeft: theme.spacing(1),\n  flex: 1\n}));\n_c2 = PolicyInfoBox;\nconst PolicyName = styled(Typography)(({\n  theme\n}) => ({\n  fontWeight: 600,\n  color: theme.palette.primary.main\n}));\n_c3 = PolicyName;\nconst PolicyTarget = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n  marginTop: theme.spacing(0.5)\n}));\n_c4 = PolicyTarget;\nconst EmptyMessage = styled(Typography)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n_c5 = EmptyMessage;\nfunction PolicySearch({\n  policies,\n  selected,\n  toggleSelect\n}) {\n  // 정책 데이터에서 필요한 정보 추출\n  const mappedPolicies = policies.map(policy => {\n    if (!policy || !policy.json || !policy.json.wantedDtl) {\n      return {\n        id: (policy === null || policy === void 0 ? void 0 : policy.service_id) || \"\",\n        name: \"-\",\n        target: \"-\"\n      };\n    }\n    const wantedDtl = policy.json.wantedDtl;\n    return {\n      id: policy.service_id,\n      name: wantedDtl.servNm || \"-\",\n      target: wantedDtl.sprtTrgtCn || \"-\"\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      borderRadius: 2,\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"policy-search\",\n      sx: {\n        p: 2\n      },\n      children: mappedPolicies.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: mappedPolicies.map(policy => /*#__PURE__*/_jsxDEV(PolicyListItem, {\n          component: Paper,\n          elevation: 1,\n          sx: {\n            borderLeft: selected.includes(policy.id) ? 4 : 0,\n            borderColor: 'primary.main',\n            pl: selected.includes(policy.id) ? 1 : 2\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selected.includes(policy.id),\n              onChange: () => toggleSelect(policy.id),\n              disabled: selected.length >= 2 && !selected.includes(policy.id),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(PolicyInfoBox, {\n              children: [/*#__PURE__*/_jsxDEV(PolicyName, {\n                variant: \"subtitle1\",\n                children: policy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(PolicyTarget, {\n                variant: \"body2\",\n                children: [\"\\uC9C0\\uC6D0\\uB300\\uC0C1: \", policy.target]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this),\n            sx: {\n              width: '100%',\n              m: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, policy.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyMessage, {\n        variant: \"body1\",\n        children: \"\\uD45C\\uC2DC\\uD560 \\uC815\\uCC45\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_c6 = PolicySearch;\nexport default PolicySearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PolicyListItem\");\n$RefreshReg$(_c2, \"PolicyInfoBox\");\n$RefreshReg$(_c3, \"PolicyName\");\n$RefreshReg$(_c4, \"PolicyTarget\");\n$RefreshReg$(_c5, \"EmptyMessage\");\n$RefreshReg$(_c6, \"PolicySearch\");","map":{"version":3,"names":["React","Checkbox","FormControlLabel","List","ListItem","Typography","Paper","Box","styled","jsxDEV","_jsxDEV","PolicyListItem","theme","padding","spacing","margin","borderRadius","shape","transition","backgroundColor","palette","action","hover","_c","PolicyInfoBox","marginLeft","flex","_c2","PolicyName","fontWeight","color","primary","main","_c3","PolicyTarget","fontSize","text","secondary","marginTop","_c4","EmptyMessage","textAlign","_c5","PolicySearch","policies","selected","toggleSelect","mappedPolicies","map","policy","json","wantedDtl","id","service_id","name","target","servNm","sprtTrgtCn","elevation","sx","overflow","children","className","p","length","disablePadding","component","borderLeft","includes","borderColor","pl","control","checked","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","width","m","_c6","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/components/PolicySearch.js"],"sourcesContent":["import React from \"react\";\nimport { \n  Checkbox, \n  FormControlLabel, \n  List, \n  ListItem, \n  Typography, \n  Paper, \n  Box \n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// 스타일링된 컴포넌트\nconst PolicyListItem = styled(ListItem)(({ theme }) => ({\n  padding: theme.spacing(1.5),\n  margin: theme.spacing(1, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n}));\n\nconst PolicyInfoBox = styled(Box)(({ theme }) => ({\n  marginLeft: theme.spacing(1),\n  flex: 1,\n}));\n\nconst PolicyName = styled(Typography)(({ theme }) => ({\n  fontWeight: 600,\n  color: theme.palette.primary.main,\n}));\n\nconst PolicyTarget = styled(Typography)(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n  marginTop: theme.spacing(0.5),\n}));\n\nconst EmptyMessage = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(3),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction PolicySearch({ policies, selected, toggleSelect }) {\n  // 정책 데이터에서 필요한 정보 추출\n  const mappedPolicies = policies.map(policy => {\n    if (!policy || !policy.json || !policy.json.wantedDtl) {\n      return {\n        id: policy?.service_id || \"\",\n        name: \"-\",\n        target: \"-\"\n      };\n    }\n    \n    const wantedDtl = policy.json.wantedDtl;\n    return {\n      id: policy.service_id,\n      name: wantedDtl.servNm || \"-\",\n      target: wantedDtl.sprtTrgtCn || \"-\"\n    };\n  });\n\n  return (\n    <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\n      <Box className=\"policy-search\" sx={{ p: 2 }}>\n        {mappedPolicies.length > 0 ? (\n          <List disablePadding>\n            {mappedPolicies.map((policy) => (\n              <PolicyListItem \n                key={policy.id} \n                component={Paper} \n                elevation={1}\n                sx={{ \n                  borderLeft: selected.includes(policy.id) ? 4 : 0, \n                  borderColor: 'primary.main',\n                  pl: selected.includes(policy.id) ? 1 : 2\n                }}\n              >\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={selected.includes(policy.id)}\n                      onChange={() => toggleSelect(policy.id)}\n                      disabled={selected.length >= 2 && !selected.includes(policy.id)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <PolicyInfoBox>\n                      <PolicyName variant=\"subtitle1\">{policy.name}</PolicyName>\n                      <PolicyTarget variant=\"body2\">지원대상: {policy.target}</PolicyTarget>\n                    </PolicyInfoBox>\n                  }\n                  sx={{ width: '100%', m: 0 }}\n                />\n              </PolicyListItem>\n            ))}\n          </List>\n        ) : (\n          <EmptyMessage variant=\"body1\">표시할 정책이 없습니다.</EmptyMessage>\n        )}\n      </Box>\n    </Paper>\n  );\n}\n\nexport default PolicySearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}