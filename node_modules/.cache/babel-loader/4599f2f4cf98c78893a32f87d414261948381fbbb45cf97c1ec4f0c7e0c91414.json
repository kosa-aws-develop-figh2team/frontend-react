{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport PolicySearch from \"./components/PolicySearch\";\nimport PolicyCompare from \"./components/PolicyCompare\";\n// import \"./styles/AppLayout.css\"; // 새 스타일 파일\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"model\",\n    text: \"안녕하세요! 궁금한 정책을 물어보세요!\"\n  }]);\n  const [policies, setPolicies] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  // 정책 데이터 불러오기\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/items`).then(res => res.json()).then(data => {\n      const policiesWithId = data.map(policy => ({\n        ...policy,\n        id: policy.service_id\n      }));\n      setPolicies(policiesWithId);\n    }).catch(err => {\n      console.error('정책 데이터를 불러오는 중 오류 발생:', err);\n    });\n  }, []);\n\n  // 챗봇 메세지 전송\n  const handleSend = text => {\n    if (!text.trim()) return;\n    setMessages([...messages, {\n      role: \"user\",\n      text\n    }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      // 예시: 챗봇이 정책 2개 추천\n      setMessages(prev => [...prev, {\n        role: \"model\",\n        text: `\"${text}\"에 대한 추천 정책입니다.`\n      }, {\n        role: \"model\",\n        text: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _policies$, _policies$2;\n                return setSelected([(_policies$ = policies[0]) === null || _policies$ === void 0 ? void 0 : _policies$.id, (_policies$2 = policies[1]) === null || _policies$2 === void 0 ? void 0 : _policies$2.id].filter(Boolean));\n              },\n              children: \"\\uC774 \\uC815\\uCC45 2\\uAC1C \\uBE44\\uAD50\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }]);\n    }, 600);\n  };\n\n  // 정책 선택/해제\n  const toggleSelect = id => {\n    setSelected(prevSelected => prevSelected.includes(id) ? prevSelected.filter(item => item !== id) : [...prevSelected, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"service-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD30C2\\uD300 \\uC815\\uCC45\\uCC3E\\uAE30/\\uBE44\\uAD50 \\uC11C\\uBE44\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"service-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"service-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-popup\",\n          children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-body\",\n            children: /*#__PURE__*/_jsxDEV(ChatMessages, {\n              messages: messages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-footer\",\n            children: /*#__PURE__*/_jsxDEV(ChatForm, {\n              onSend: handleSend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolicySearch, {\n          policies: policies,\n          selected: selected,\n          toggleSelect: toggleSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"service-right\",\n        children: /*#__PURE__*/_jsxDEV(PolicyCompare, {\n          policies: policies.filter(p => selected.includes(p.id)),\n          onClose: () => setSelected([])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jg6TRwLSpylQiEWukIE66PssrV0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatHeader","ChatMessages","ChatForm","PolicySearch","PolicyCompare","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","role","text","policies","setPolicies","selected","setSelected","fetch","process","env","REACT_APP_SERVER_URL","then","res","json","data","policiesWithId","map","policy","id","service_id","catch","err","console","error","handleSend","trim","setTimeout","prev","children","onClick","_policies$","_policies$2","filter","Boolean","fileName","_jsxFileName","lineNumber","columnNumber","toggleSelect","prevSelected","includes","item","className","onSend","p","onClose","_c","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport PolicySearch from \"./components/PolicySearch\";\nimport PolicyCompare from \"./components/PolicyCompare\";\n// import \"./styles/AppLayout.css\"; // 새 스타일 파일\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { role: \"model\", text: \"안녕하세요! 궁금한 정책을 물어보세요!\" }\n  ]);\n  const [policies, setPolicies] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  // 정책 데이터 불러오기\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/items`)\n      .then(res => res.json())\n      .then(data => {\n        const policiesWithId = data.map(policy => ({\n          ...policy,\n          id: policy.service_id\n        }));\n        setPolicies(policiesWithId);\n      })\n      .catch(err => {\n        console.error('정책 데이터를 불러오는 중 오류 발생:', err);\n      });\n  }, []);\n\n  // 챗봇 메세지 전송\n  const handleSend = (text) => {\n    if (!text.trim()) return;\n    setMessages([...messages, { role: \"user\", text }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      // 예시: 챗봇이 정책 2개 추천\n      setMessages((prev) => [\n        ...prev,\n        { role: \"model\", text: `\"${text}\"에 대한 추천 정책입니다.` },\n        { role: \"model\", text: (\n          <>\n            <div>\n              <button onClick={() => setSelected([policies[0]?.id, policies[1]?.id].filter(Boolean))}>\n                이 정책 2개 비교하기\n              </button>\n            </div>\n          </>\n        )}\n      ]);\n    }, 600);\n  };\n\n  // 정책 선택/해제\n  const toggleSelect = (id) => {\n    setSelected((prevSelected) =>\n      prevSelected.includes(id)\n        ? prevSelected.filter((item) => item !== id)\n        : [...prevSelected, id]\n    );\n  };\n\n  return (\n    <div className=\"service-root\">\n      <header className=\"service-header\">\n        <h1>파2팀 정책찾기/비교 서비스</h1>\n      </header>\n      <main className=\"service-main\">\n        {/* 왼쪽: 챗봇 */}\n        <section className=\"service-left\">\n          <div className=\"chatbot-popup\">\n            <ChatHeader />\n            <div className=\"chat-body\">\n              <ChatMessages messages={messages} />\n            </div>\n            <div className=\"chat-footer\">\n              <ChatForm onSend={handleSend} />\n            </div>\n          </div>\n          {/* 챗봇 아래에 정책 검색/선택 리스트가 필요하다면 여기에 */}\n          <PolicySearch\n            policies={policies}\n            selected={selected}\n            toggleSelect={toggleSelect}\n          />\n        </section>\n        {/* 오른쪽: 정책 비교 */}\n        <section className=\"service-right\">\n          <PolicyCompare\n            policies={policies.filter((p) => selected.includes(p.id))}\n            onClose={() => setSelected([])}\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}