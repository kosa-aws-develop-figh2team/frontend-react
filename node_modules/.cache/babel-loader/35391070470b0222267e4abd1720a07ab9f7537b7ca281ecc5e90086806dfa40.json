{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/components/PolicySearch.js\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, List, ListItem, Typography, Paper, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// 메인 컬러 상수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_COLOR = \"#6D4FC2\";\n\n// 스타일링된 컴포넌트\nconst PolicyListItem = styled(ListItem)(({\n  theme,\n  selected\n}) => ({\n  padding: theme.spacing(1.5),\n  margin: theme.spacing(1, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: 'all 0.3s ease',\n  borderLeft: selected ? `4px solid ${MAIN_COLOR}` : '4px solid transparent',\n  backgroundColor: selected ? \"#f7f4fd\" : \"inherit\",\n  '&:hover': {\n    backgroundColor: \"#f3eefd\"\n  }\n}));\n_c = PolicyListItem;\nconst PolicyInfoBox = styled(Box)(({\n  theme\n}) => ({\n  marginLeft: theme.spacing(1),\n  flex: 1\n}));\n_c2 = PolicyInfoBox;\nconst PolicyName = styled(Typography)(() => ({\n  fontWeight: 600,\n  color: MAIN_COLOR\n}));\n_c3 = PolicyName;\nconst PolicyTarget = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n  marginTop: theme.spacing(0.5)\n}));\n_c4 = PolicyTarget;\nconst EmptyMessage = styled(Typography)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n_c5 = EmptyMessage;\nfunction PolicySearch({\n  policies,\n  selected,\n  toggleSelect\n}) {\n  // 정책 데이터에서 필요한 정보 추출\n  const mappedPolicies = policies.map(policy => {\n    if (!policy || !policy.json || !policy.json.wantedDtl) {\n      return {\n        id: (policy === null || policy === void 0 ? void 0 : policy.service_id) || \"\",\n        name: \"-\",\n        target: \"-\"\n      };\n    }\n    const wantedDtl = policy.json.wantedDtl;\n    return {\n      id: policy.service_id,\n      name: wantedDtl.servNm || \"-\",\n      target: wantedDtl.sprtTrgtCn || \"-\"\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"policy-search\",\n      sx: {\n        p: 2\n      },\n      children: mappedPolicies.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: mappedPolicies.map(policy => /*#__PURE__*/_jsxDEV(PolicyListItem, {\n          component: Paper,\n          elevation: 1,\n          selected: selected.includes(policy.id) ? 1 : 0,\n          style: {\n            background: \"#FFF\",\n            minHeight: \"100vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selected.includes(policy.id),\n              onChange: () => toggleSelect(policy.id),\n              disabled: selected.length >= 2 && !selected.includes(policy.id),\n              sx: {\n                color: MAIN_COLOR,\n                '&.Mui-checked': {\n                  color: MAIN_COLOR\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(PolicyInfoBox, {\n              children: [/*#__PURE__*/_jsxDEV(PolicyName, {\n                variant: \"subtitle1\",\n                children: policy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(PolicyTarget, {\n                variant: \"body2\",\n                children: [\"\\uC9C0\\uC6D0\\uB300\\uC0C1: \", policy.target]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this),\n            sx: {\n              width: '100%',\n              m: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, policy.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyMessage, {\n        variant: \"body1\",\n        children: \"\\uD45C\\uC2DC\\uD560 \\uC815\\uCC45\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c6 = PolicySearch;\nexport default PolicySearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PolicyListItem\");\n$RefreshReg$(_c2, \"PolicyInfoBox\");\n$RefreshReg$(_c3, \"PolicyName\");\n$RefreshReg$(_c4, \"PolicyTarget\");\n$RefreshReg$(_c5, \"EmptyMessage\");\n$RefreshReg$(_c6, \"PolicySearch\");","map":{"version":3,"names":["React","Checkbox","FormControlLabel","List","ListItem","Typography","Paper","Box","styled","jsxDEV","_jsxDEV","MAIN_COLOR","PolicyListItem","theme","selected","padding","spacing","margin","borderRadius","shape","transition","borderLeft","backgroundColor","_c","PolicyInfoBox","marginLeft","flex","_c2","PolicyName","fontWeight","color","_c3","PolicyTarget","fontSize","palette","text","secondary","marginTop","_c4","EmptyMessage","textAlign","_c5","PolicySearch","policies","toggleSelect","mappedPolicies","map","policy","json","wantedDtl","id","service_id","name","target","servNm","sprtTrgtCn","children","className","sx","p","length","disablePadding","component","elevation","includes","style","background","minHeight","control","checked","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","width","m","_c6","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/components/PolicySearch.js"],"sourcesContent":["import React from \"react\";\nimport { \n  Checkbox, \n  FormControlLabel, \n  List, \n  ListItem, \n  Typography, \n  Paper, \n  Box \n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// 메인 컬러 상수\nconst MAIN_COLOR = \"#6D4FC2\";\n\n// 스타일링된 컴포넌트\nconst PolicyListItem = styled(ListItem)(({ theme, selected }) => ({\n  padding: theme.spacing(1.5),\n  margin: theme.spacing(1, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: 'all 0.3s ease',\n  borderLeft: selected ? `4px solid ${MAIN_COLOR}` : '4px solid transparent',\n  backgroundColor: selected ? \"#f7f4fd\" : \"inherit\",\n  '&:hover': {\n    backgroundColor: \"#f3eefd\",\n  },\n}));\n\nconst PolicyInfoBox = styled(Box)(({ theme }) => ({\n  marginLeft: theme.spacing(1),\n  flex: 1,\n}));\n\nconst PolicyName = styled(Typography)(() => ({\n  fontWeight: 600,\n  color: MAIN_COLOR,\n}));\n\nconst PolicyTarget = styled(Typography)(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n  marginTop: theme.spacing(0.5),\n}));\n\nconst EmptyMessage = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(3),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction PolicySearch({ policies, selected, toggleSelect }) {\n  // 정책 데이터에서 필요한 정보 추출\n  const mappedPolicies = policies.map(policy => {\n    if (!policy || !policy.json || !policy.json.wantedDtl) {\n      return {\n        id: policy?.service_id || \"\",\n        name: \"-\",\n        target: \"-\"\n      };\n    }\n    \n    const wantedDtl = policy.json.wantedDtl;\n    return {\n      id: policy.service_id,\n      name: wantedDtl.servNm || \"-\",\n      target: wantedDtl.sprtTrgtCn || \"-\"\n    };\n  });\n\n  return (\n    <div>\n      <Box className=\"policy-search\" sx={{ p: 2 }}>\n        {mappedPolicies.length > 0 ? (\n          <List disablePadding>\n            {mappedPolicies.map((policy) => (\n              <PolicyListItem \n                key={policy.id} \n                component={Paper} \n                elevation={1}\n                selected={selected.includes(policy.id) ? 1 : 0}\n                style={{ background: \"#FFF\", minHeight: \"100vh\" }}\n              >\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={selected.includes(policy.id)}\n                      onChange={() => toggleSelect(policy.id)}\n                      disabled={selected.length >= 2 && !selected.includes(policy.id)}\n                      sx={{\n                        color: MAIN_COLOR,\n                        '&.Mui-checked': {\n                          color: MAIN_COLOR,\n                        },\n                      }}\n                    />\n                  }\n                  label={\n                    <PolicyInfoBox>\n                      <PolicyName variant=\"subtitle1\">{policy.name}</PolicyName>\n                      <PolicyTarget variant=\"body2\">지원대상: {policy.target}</PolicyTarget>\n                    </PolicyInfoBox>\n                  }\n                  sx={{ width: '100%', m: 0 }}\n                />\n              </PolicyListItem>\n            ))}\n          </List>\n        ) : (\n          <EmptyMessage variant=\"body1\">표시할 정책이 없습니다.</EmptyMessage>\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default PolicySearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}