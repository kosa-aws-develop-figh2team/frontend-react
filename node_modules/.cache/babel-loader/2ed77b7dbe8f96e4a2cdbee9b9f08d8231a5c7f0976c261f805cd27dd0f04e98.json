{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/\\u1100\\u116F\\u11AB\\u1109\\u1169\\u110B\\u1167\\u11AB_\\u1109\\u1173\\u110F\\u1175\\u11AF\\u1107\\u1175\\u11AF\\u1103\\u1165/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [text, setText] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [displayedText, setDisplayedText] = useState('');\n//   const [displayedAuthor, setDisplayedAuthor] = useState('');\n\n//   useEffect(() => {\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`)\n//       .then(res => res.json())\n//       .then(data => {\n//         let text = data.text.split(\"by\")[0]\n//         let author = data.text.split(\"by\")[1]\n//         setDisplayedText(text);\n//         setDisplayedAuthor(author)\n//       });\n//   }, []);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ text, username }),\n//     });\n//     setText('');\n//     setUsername('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>확신없는 랜덤 명언</h1>\n//       <h2>{displayedText ? displayedText : \"아직 저장된 명언이 없거나 서버와 연결되지 않았습니다.\"}</h2>\n//       <h2>by {displayedAuthor}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter text\"\n//           value={text}\n//           onChange={e => setText(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter username\"\n//           value={username}\n//           onChange={e => setUsername(e.target.value)}\n//         />\n//         <button type=\"submit\">명언 저장</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\n// 챗봇\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport \"./styles/chatbot.css\";\n// 정책 비교\nimport PolicySearch from \"./components/PolicySearch\";\nimport PolicySelector from \"./components/PolicySelector\";\nimport PolicyCompare from \"./components/PolicyCompare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"model\",\n    text: \"안녕하세요! 무엇을 도와드릴까요?\"\n  }]);\n  const handleSend = text => {\n    if (!text.trim()) return;\n    setMessages([...messages, {\n      role: \"user\",\n      text\n    }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        role: \"model\",\n        text: `\"${text}\"에 대한 답변입니다.`\n      }]);\n    }, 600);\n  };\n\n  // 예시 데이터\n  const [policies] = useState([{\n    id: 1,\n    name: \"청년 주거 지원\",\n    target: \"청년\",\n    content: \"임대료 지원\",\n    period: \"2024.01~12\"\n  }, {\n    id: 2,\n    name: \"창업 지원금\",\n    target: \"예비 창업자\",\n    content: \"창업 자금 지원\",\n    period: \"상시\"\n  }, {\n    id: 3,\n    name: \"육아 지원\",\n    target: \"부모\",\n    content: \"보육료 지원\",\n    period: \"2024.03~11\"\n  }]);\n  const [selected, setSelected] = useState([]);\n\n  // 정책 선택/해제\n  const toggleSelect = id => {\n    setSelected(prev => prev.includes(id) ? prev.filter(sid => sid !== id) : [...prev, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-popup\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(ChatMessages, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: /*#__PURE__*/_jsxDEV(ChatForm, {\n          onSend: handleSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 600,\n        margin: \"0 auto\",\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC815\\uCC45\\uCC3E\\uAE30/\\uBE44\\uAD50 \\uC11C\\uBE44\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PolicySelector, {\n        policies: policies,\n        selected: selected,\n        toggleSelect: toggleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PolicyCompare, {\n        policies: policies.filter(p => selected.includes(p.id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPMqsxey38QZAMX/DMS+3OK8dDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatHeader","ChatMessages","ChatForm","PolicySearch","PolicySelector","PolicyCompare","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","text","handleSend","trim","setTimeout","prev","policies","id","name","target","content","period","selected","setSelected","toggleSelect","includes","filter","sid","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSend","style","maxWidth","margin","padding","p","_c","$RefreshReg$"],"sources":["/Users/soyeon/권소연_스킬빌더/frontend-react/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [text, setText] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [displayedText, setDisplayedText] = useState('');\n//   const [displayedAuthor, setDisplayedAuthor] = useState('');\n\n//   useEffect(() => {\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`)\n//       .then(res => res.json())\n//       .then(data => {\n//         let text = data.text.split(\"by\")[0]\n//         let author = data.text.split(\"by\")[1]\n//         setDisplayedText(text);\n//         setDisplayedAuthor(author)\n//       });\n//   }, []);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     fetch(`${process.env.REACT_APP_SERVER_URL}/api/text`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ text, username }),\n//     });\n//     setText('');\n//     setUsername('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>확신없는 랜덤 명언</h1>\n//       <h2>{displayedText ? displayedText : \"아직 저장된 명언이 없거나 서버와 연결되지 않았습니다.\"}</h2>\n//       <h2>by {displayedAuthor}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter text\"\n//           value={text}\n//           onChange={e => setText(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter username\"\n//           value={username}\n//           onChange={e => setUsername(e.target.value)}\n//         />\n//         <button type=\"submit\">명언 저장</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\"\n// 챗봇\nimport ChatHeader from \"./components/ChatHeader\";\nimport ChatMessages from \"./components/ChatMessages\";\nimport ChatForm from \"./components/ChatForm\";\nimport \"./styles/chatbot.css\";\n// 정책 비교\nimport PolicySearch from \"./components/PolicySearch\";\nimport PolicySelector from \"./components/PolicySelector\";\nimport PolicyCompare from \"./components/PolicyCompare\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { role: \"model\", text: \"안녕하세요! 무엇을 도와드릴까요?\" }\n  ]);\n\n  const handleSend = (text) => {\n    if (!text.trim()) return;\n    setMessages([...messages, { role: \"user\", text }]);\n    // 실제 서비스에서는 여기서 API 호출 후 응답 추가\n    setTimeout(() => {\n      setMessages((prev) => [\n        ...prev,\n        { role: \"model\", text: `\"${text}\"에 대한 답변입니다.` }\n      ]);\n    }, 600);\n  };\n\n  // 예시 데이터\n  const [policies] = useState([\n    { id: 1, name: \"청년 주거 지원\", target: \"청년\", content: \"임대료 지원\", period: \"2024.01~12\" },\n    { id: 2, name: \"창업 지원금\", target: \"예비 창업자\", content: \"창업 자금 지원\", period: \"상시\" },\n    { id: 3, name: \"육아 지원\", target: \"부모\", content: \"보육료 지원\", period: \"2024.03~11\" },\n  ]);\n  const [selected, setSelected] = useState([]);\n\n  // 정책 선택/해제\n  const toggleSelect = (id) => {\n    setSelected((prev) =>\n      prev.includes(id) ? prev.filter((sid) => sid !== id) : [...prev, id]\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"chatbot-popup\">\n        <ChatHeader />\n        <div className=\"chat-body\">\n          <ChatMessages messages={messages} />\n        </div>\n        <div className=\"chat-footer\">\n          <ChatForm onSend={handleSend} />\n        </div>\n      </div>\n      <div style={{ maxWidth: 600, margin: \"0 auto\", padding: 20 }}>\n      <h1>정책찾기/비교 서비스</h1>\n      <PolicySelector\n        policies={policies}\n        selected={selected}\n        toggleSelect={toggleSelect}\n      />\n      <PolicyCompare\n        policies={policies.filter((p) => selected.includes(p.id))}\n      />\n    </div>\n   </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}